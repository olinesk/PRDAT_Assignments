// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | QUESTIONMARK
  | COLON
  | INC
  | DEC
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_QUESTIONMARK
    | TOKEN_COLON
    | TOKEN_INC
    | TOKEN_DEC
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | QUESTIONMARK  -> 0 
  | COLON  -> 1 
  | INC  -> 2 
  | DEC  -> 3 
  | EOF  -> 4 
  | LPAR  -> 5 
  | RPAR  -> 6 
  | LBRACE  -> 7 
  | RBRACE  -> 8 
  | LBRACK  -> 9 
  | RBRACK  -> 10 
  | SEMI  -> 11 
  | COMMA  -> 12 
  | ASSIGN  -> 13 
  | AMP  -> 14 
  | NOT  -> 15 
  | SEQOR  -> 16 
  | SEQAND  -> 17 
  | EQ  -> 18 
  | NE  -> 19 
  | GT  -> 20 
  | LT  -> 21 
  | GE  -> 22 
  | LE  -> 23 
  | PLUS  -> 24 
  | MINUS  -> 25 
  | TIMES  -> 26 
  | DIV  -> 27 
  | MOD  -> 28 
  | CHAR  -> 29 
  | ELSE  -> 30 
  | IF  -> 31 
  | INT  -> 32 
  | NULL  -> 33 
  | PRINT  -> 34 
  | PRINTLN  -> 35 
  | RETURN  -> 36 
  | VOID  -> 37 
  | WHILE  -> 38 
  | FOR  -> 39 
  | CSTSTRING _ -> 40 
  | NAME _ -> 41 
  | CSTINT _ -> 42 
  | CSTBOOL _ -> 43 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_QUESTIONMARK 
  | 1 -> TOKEN_COLON 
  | 2 -> TOKEN_INC 
  | 3 -> TOKEN_DEC 
  | 4 -> TOKEN_EOF 
  | 5 -> TOKEN_LPAR 
  | 6 -> TOKEN_RPAR 
  | 7 -> TOKEN_LBRACE 
  | 8 -> TOKEN_RBRACE 
  | 9 -> TOKEN_LBRACK 
  | 10 -> TOKEN_RBRACK 
  | 11 -> TOKEN_SEMI 
  | 12 -> TOKEN_COMMA 
  | 13 -> TOKEN_ASSIGN 
  | 14 -> TOKEN_AMP 
  | 15 -> TOKEN_NOT 
  | 16 -> TOKEN_SEQOR 
  | 17 -> TOKEN_SEQAND 
  | 18 -> TOKEN_EQ 
  | 19 -> TOKEN_NE 
  | 20 -> TOKEN_GT 
  | 21 -> TOKEN_LT 
  | 22 -> TOKEN_GE 
  | 23 -> TOKEN_LE 
  | 24 -> TOKEN_PLUS 
  | 25 -> TOKEN_MINUS 
  | 26 -> TOKEN_TIMES 
  | 27 -> TOKEN_DIV 
  | 28 -> TOKEN_MOD 
  | 29 -> TOKEN_CHAR 
  | 30 -> TOKEN_ELSE 
  | 31 -> TOKEN_IF 
  | 32 -> TOKEN_INT 
  | 33 -> TOKEN_NULL 
  | 34 -> TOKEN_PRINT 
  | 35 -> TOKEN_PRINTLN 
  | 36 -> TOKEN_RETURN 
  | 37 -> TOKEN_VOID 
  | 38 -> TOKEN_WHILE 
  | 39 -> TOKEN_FOR 
  | 40 -> TOKEN_CSTSTRING 
  | 41 -> TOKEN_NAME 
  | 42 -> TOKEN_CSTINT 
  | 43 -> TOKEN_CSTBOOL 
  | 46 -> TOKEN_end_of_input
  | 44 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtU 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_AtExprNotAccess 
    | 60 -> NONTERM_AtExprNotAccess 
    | 61 -> NONTERM_AtExprNotAccess 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Exprs 
    | 68 -> NONTERM_Exprs 
    | 69 -> NONTERM_Exprs1 
    | 70 -> NONTERM_Exprs1 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Const 
    | 75 -> NONTERM_Type 
    | 76 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 46 
let _fsyacc_tagOfErrorTerminal = 44

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | QUESTIONMARK  -> "QUESTIONMARK" 
  | COLON  -> "COLON" 
  | INC  -> "INC" 
  | DEC  -> "DEC" 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | QUESTIONMARK  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | INC  -> (null : System.Object) 
  | DEC  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;9us;65535us;27us;28us;31us;32us;37us;54us;40us;54us;43us;54us;58us;54us;59us;54us;64us;54us;73us;54us;3us;65535us;37us;38us;40us;41us;43us;44us;4us;65535us;37us;40us;40us;40us;43us;40us;58us;76us;7us;65535us;37us;45us;40us;45us;43us;45us;58us;46us;59us;60us;64us;65us;73us;74us;7us;65535us;37us;47us;40us;47us;43us;47us;58us;47us;59us;75us;64us;77us;73us;78us;36us;65535us;37us;48us;40us;48us;43us;48us;50us;52us;56us;57us;58us;48us;59us;48us;62us;63us;64us;48us;67us;68us;69us;70us;71us;72us;73us;48us;84us;85us;87us;117us;90us;91us;96us;97us;118us;99us;119us;100us;120us;101us;121us;102us;122us;103us;123us;104us;124us;105us;125us;106us;126us;107us;127us;108us;128us;109us;129us;110us;130us;112us;131us;113us;132us;114us;133us;115us;136us;111us;147us;116us;150us;117us;36us;65535us;37us;81us;40us;81us;43us;81us;50us;81us;56us;81us;58us;81us;59us;81us;62us;81us;64us;81us;67us;81us;69us;81us;71us;81us;73us;81us;84us;81us;87us;81us;90us;81us;96us;81us;118us;81us;119us;81us;120us;81us;121us;81us;122us;81us;123us;81us;124us;81us;125us;81us;126us;81us;127us;81us;128us;81us;129us;81us;130us;81us;131us;82us;132us;81us;133us;81us;136us;82us;147us;81us;150us;81us;37us;65535us;37us;83us;40us;83us;43us;83us;50us;83us;56us;83us;58us;83us;59us;83us;62us;83us;64us;83us;67us;83us;69us;83us;71us;83us;73us;83us;84us;83us;87us;83us;90us;83us;96us;83us;118us;83us;119us;83us;120us;83us;121us;83us;122us;83us;123us;83us;124us;83us;125us;83us;126us;83us;127us;83us;128us;83us;129us;83us;130us;83us;131us;83us;132us;83us;133us;83us;136us;83us;144us;146us;147us;83us;150us;83us;41us;65535us;37us;80us;40us;80us;43us;80us;50us;80us;56us;80us;58us;80us;59us;80us;62us;80us;64us;80us;67us;80us;69us;80us;71us;80us;73us;80us;84us;80us;87us;80us;90us;80us;92us;93us;94us;95us;96us;80us;118us;80us;119us;80us;120us;80us;121us;80us;122us;80us;123us;80us;124us;80us;125us;80us;126us;80us;127us;80us;128us;80us;129us;80us;130us;80us;131us;79us;132us;80us;133us;80us;136us;79us;138us;139us;141us;142us;144us;145us;147us;80us;150us;80us;1us;65535us;87us;88us;2us;65535us;87us;149us;150us;151us;37us;65535us;37us;135us;40us;135us;43us;135us;50us;135us;56us;135us;58us;135us;59us;135us;62us;135us;64us;135us;67us;135us;69us;135us;71us;135us;73us;135us;84us;135us;87us;135us;90us;135us;96us;135us;118us;135us;119us;135us;120us;135us;121us;135us;122us;135us;123us;135us;124us;135us;125us;135us;126us;135us;127us;135us;128us;135us;129us;135us;130us;135us;131us;135us;132us;135us;133us;135us;136us;135us;144us;135us;147us;135us;150us;135us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;43us;47us;52us;60us;68us;105us;142us;180us;222us;224us;227us;265us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;3us;22us;28us;31us;1us;23us;14us;24us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;1us;24us;2us;25us;26us;1us;25us;14us;26us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;1us;26us;1us;27us;3us;28us;31us;32us;3us;28us;31us;32us;16us;28us;31us;32us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;3us;28us;31us;32us;2us;28us;31us;1us;28us;2us;29us;33us;2us;29us;33us;15us;29us;33us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;2us;29us;33us;1us;29us;2us;30us;34us;2us;30us;34us;15us;30us;34us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;2us;30us;34us;15us;30us;34us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;2us;30us;34us;15us;30us;34us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;2us;30us;34us;1us;30us;1us;31us;1us;32us;1us;33us;1us;34us;4us;35us;38us;63us;66us;3us;35us;38us;66us;1us;36us;2us;36us;60us;1us;37us;1us;38us;14us;38us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;2us;39us;62us;1us;39us;1us;39us;1us;39us;1us;40us;14us;40us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;1us;41us;2us;41us;66us;1us;42us;2us;42us;66us;1us;43us;14us;43us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;1us;44us;14us;45us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;49us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;56us;57us;13us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;57us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;14us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;66us;15us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;69us;70us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;57us;3us;58us;60us;63us;1us;58us;1us;58us;1us;58us;1us;59us;2us;60us;63us;1us;60us;1us;61us;2us;61us;66us;1us;62us;1us;63us;2us;63us;66us;1us;63us;2us;64us;65us;2us;64us;66us;1us;65us;1us;66us;1us;66us;1us;68us;1us;70us;1us;70us;1us;71us;1us;72us;1us;73us;1us;73us;1us;74us;1us;75us;1us;76us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;106us;108us;123us;125us;128us;130us;145us;147us;149us;153us;157us;174us;178us;181us;183us;186us;189us;205us;208us;210us;213us;216us;232us;235us;251us;254us;270us;273us;275us;277us;279us;281us;283us;288us;292us;294us;297us;299us;301us;316us;319us;321us;323us;325us;327us;342us;344us;347us;349us;352us;354us;369us;371us;386us;401us;416us;431us;446us;461us;476us;491us;506us;521us;536us;551us;565us;580us;595us;610us;625us;640us;656us;658us;660us;662us;664us;666us;668us;670us;672us;674us;676us;678us;680us;682us;686us;688us;690us;692us;694us;697us;699us;701us;704us;706us;708us;711us;713us;716us;719us;721us;723us;725us;727us;729us;731us;733us;735us;737us;739us;741us;743us;|]
let _fsyacc_action_rows = 159
let _fsyacc_actionTableElements = [|3us;16386us;29us;158us;32us;157us;37us;23us;0us;49152us;1us;32768us;4us;3us;0us;16385us;3us;16386us;29us;158us;32us;157us;37us;23us;0us;16387us;1us;32768us;11us;7us;0us;16388us;0us;16389us;3us;32768us;5us;16us;26us;14us;41us;12us;3us;32768us;5us;16us;26us;14us;41us;13us;1us;16390us;9us;19us;0us;16391us;1us;16391us;5us;29us;3us;32768us;5us;16us;26us;14us;41us;12us;1us;16392us;9us;19us;3us;32768us;5us;16us;26us;14us;41us;12us;2us;32768us;6us;18us;9us;19us;0us;16393us;2us;32768us;10us;20us;42us;21us;0us;16394us;1us;32768us;10us;22us;0us;16395us;1us;32768us;41us;24us;1us;32768us;5us;25us;2us;16398us;29us;158us;32us;157us;1us;32768us;6us;27us;1us;32768us;7us;37us;0us;16396us;2us;16398us;29us;158us;32us;157us;1us;32768us;6us;31us;1us;32768us;7us;37us;0us;16397us;0us;16399us;1us;16400us;12us;35us;2us;32768us;29us;158us;32us;157us;0us;16401us;20us;16403us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;29us;158us;31us;55us;32us;157us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;1us;32768us;8us;39us;0us;16402us;20us;16403us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;29us;158us;31us;55us;32us;157us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;0us;16404us;1us;32768us;11us;43us;20us;16403us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;29us;158us;31us;55us;32us;157us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;0us;16405us;0us;16406us;1us;16406us;30us;59us;0us;16407us;14us;32768us;11us;49us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;0us;16408us;14us;32768us;2us;92us;3us;94us;5us;131us;11us;51us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;0us;16409us;14us;32768us;11us;53us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;0us;16410us;0us;16411us;1us;32768us;5us;56us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;14us;32768us;6us;58us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;18us;32768us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;31us;55us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;18us;32768us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;31us;55us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;0us;16412us;1us;32768us;5us;62us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;14us;32768us;6us;64us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;18us;32768us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;31us;55us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;0us;16413us;1us;32768us;5us;67us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;14us;32768us;11us;69us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;14us;32768us;11us;71us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;14us;32768us;6us;73us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;18us;32768us;2us;92us;3us;94us;5us;131us;7us;37us;14us;138us;15us;90us;25us;154us;26us;144us;31us;55us;33us;156us;34us;96us;35us;98us;36us;50us;38us;61us;39us;66us;41us;86us;42us;152us;43us;153us;0us;16414us;0us;16415us;0us;16416us;0us;16417us;0us;16418us;3us;16419us;6us;143us;9us;147us;13us;84us;2us;16419us;9us;147us;13us;84us;0us;16420us;1us;16420us;6us;137us;0us;16421us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;16422us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;1us;16446us;5us;87us;13us;16451us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;1us;32768us;6us;89us;0us;16423us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;0us;16424us;3us;32768us;5us;141us;26us;144us;41us;140us;1us;16425us;9us;147us;3us;32768us;5us;141us;26us;144us;41us;140us;1us;16426us;9us;147us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;16427us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;0us;16428us;3us;16429us;26us;120us;27us;121us;28us;122us;3us;16430us;26us;120us;27us;121us;28us;122us;0us;16431us;0us;16432us;0us;16433us;9us;16434us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;9us;16435us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;5us;16436us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;5us;16437us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;5us;16438us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;5us;16439us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;11us;16440us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;13us;32768us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;12us;16441us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;14us;32768us;0us;132us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;14us;32768us;1us;133us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;14us;32768us;6us;134us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;14us;32768us;10us;148us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;14us;16453us;12us;150us;16us;130us;17us;129us;18us;123us;19us;124us;20us;125us;21us;126us;22us;127us;23us;128us;24us;118us;25us;119us;26us;120us;27us;121us;28us;122us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;0us;16442us;0us;16443us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;0us;16444us;3us;32768us;5us;141us;26us;144us;41us;140us;1us;16445us;9us;147us;0us;16446us;3us;32768us;5us;141us;26us;144us;41us;140us;2us;32768us;6us;143us;9us;147us;0us;16447us;8us;32768us;5us;136us;14us;138us;25us;154us;26us;144us;33us;156us;41us;140us;42us;152us;43us;153us;1us;16448us;9us;147us;0us;16449us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;0us;16450us;0us;16452us;13us;32768us;2us;92us;3us;94us;5us;131us;14us;138us;15us;90us;25us;154us;26us;144us;33us;156us;34us;96us;35us;98us;41us;86us;42us;152us;43us;153us;0us;16454us;0us;16455us;0us;16456us;1us;32768us;42us;155us;0us;16457us;0us;16458us;0us;16459us;0us;16460us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;99us;101us;102us;123us;124us;126us;147us;148us;149us;151us;152us;167us;168us;183us;184us;199us;200us;201us;203us;217us;232us;251us;270us;271us;273us;287us;302us;321us;322us;324us;338us;353us;367us;382us;396us;411us;430us;431us;432us;433us;434us;435us;439us;442us;443us;445us;446us;460us;474us;476us;490us;492us;493us;507us;508us;512us;514us;518us;520us;534us;548us;549us;553us;557us;558us;559us;560us;570us;580us;586us;592us;598us;604us;616us;630us;643us;658us;673us;688us;703us;718us;732us;746us;760us;774us;788us;802us;816us;830us;844us;858us;872us;886us;900us;914us;928us;942us;943us;944us;958us;959us;963us;965us;966us;970us;973us;974us;983us;985us;986us;1000us;1001us;1002us;1016us;1017us;1018us;1019us;1021us;1022us;1023us;1024us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;9us;7us;5us;5us;9us;1us;1us;1us;3us;4us;2us;2us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;7us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;12us;13us;13us;13us;13us;14us;14us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;16us;16us;16us;17us;17us;17us;17us;17us;18us;18us;19us;19us;20us;20us;20us;20us;21us;21us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;16406us;65535us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;16415us;16416us;16417us;16418us;65535us;65535us;16420us;65535us;16421us;65535us;65535us;65535us;65535us;65535us;16423us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16428us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16442us;16443us;65535us;16444us;65535us;65535us;16446us;65535us;65535us;16447us;65535us;65535us;16449us;65535us;16450us;16452us;65535us;16454us;16455us;16456us;65535us;16457us;16458us;16459us;16460us;|]
let _fsyacc_reductions = lazy [|
# 429 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 438 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prog _1 
                   )
# 45 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : Absyn.program));
# 449 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               [] 
                   )
# 49 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Topdecs));
# 459 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 :: _2 
                   )
# 50 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Topdecs));
# 471 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 54 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Topdec));
# 482 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 
                   )
# 55 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Topdec));
# 493 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 59 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Vardec));
# 505 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 63 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 516 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 64 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 527 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _2                                      
                   )
# 65 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 538 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 66 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 549 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 67 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 561 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 71 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Fundec));
# 574 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 72 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Fundec));
# 588 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               [] 
                   )
# 76 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs));
# 598 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 
                   )
# 77 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs));
# 609 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               [_1]     
                   )
# 81 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs1));
# 620 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 :: _3 
                   )
# 82 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs1));
# 632 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Block _2 
                   )
# 86 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Block));
# 643 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               [] 
                   )
# 90 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 653 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 91 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 665 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 92 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 677 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 
                   )
# 96 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Stmt));
# 688 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 
                   )
# 97 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Stmt));
# 699 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Expr(_1)             
                   )
# 101 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 710 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Return None          
                   )
# 102 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 720 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 103 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 731 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1                   
                   )
# 104 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 742 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 105 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 755 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               While(_3, _5)        
                   )
# 106 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 767 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                                                             // Exercise 7.3
                         Block[
                           Stmt(Expr _3); 
                           Stmt(While (_5, Block[
                             Stmt _9; 
                             Stmt (Expr _7)
                           ]))
                         ]
                       
                   )
# 107 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 789 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 119 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 802 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 120 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 814 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               While(_3, _5)        
                   )
# 121 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 826 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                                                           // Exercise 7.3
                         Block[
                           Stmt(Expr _3); 
                           Stmt(While (_5, Block[
                             Stmt _9; 
                             Stmt (Expr _7)
                           ]))
                         ]
                       
                   )
# 122 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 848 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Access _1           
                   )
# 134 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Expr));
# 859 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1                  
                   )
# 135 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Expr));
# 870 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1                  
                   )
# 139 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 881 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 140 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 893 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 141 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 905 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 142 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 916 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               PreInc(_2)          
                   )
# 143 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 927 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               PreDec(_2)          
                   )
# 144 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 938 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 145 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 949 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 146 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 959 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 147 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 971 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 148 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 983 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 149 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 995 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 150 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1007 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 151 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1019 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 152 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1031 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 153 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1043 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 154 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1055 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 155 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1067 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 156 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 157 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1091 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 158 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1103 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 159 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1115 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                                       TernaryOp(_2, _4, _6) 
                   )
# 160 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1128 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               CstI _1             
                   )
# 164 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1139 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _2                  
                   )
# 165 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1150 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               Addr _2             
                   )
# 166 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1161 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               AccVar _1           
                   )
# 170 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1172 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _2                  
                   )
# 171 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1183 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 172 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1194 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               AccDeref _2         
                   )
# 173 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1205 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 174 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1217 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               []       
                   )
# 178 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Exprs));
# 1227 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1       
                   )
# 179 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Exprs));
# 1238 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               [_1]     
                   )
# 183 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Exprs1));
# 1249 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1 :: _3 
                   )
# 184 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Exprs1));
# 1261 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1       
                   )
# 188 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1272 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               _1       
                   )
# 189 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1283 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               - _2     
                   )
# 190 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1294 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               -1       
                   )
# 191 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1304 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               TypI     
                   )
# 195 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Type));
# 1314 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                                                               TypC     
                   )
# 196 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fsy"
                 : 'gentype_Type));
|]
# 1325 "../BPRD-07-OKRE-PEKP/MicroC/CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 47;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
